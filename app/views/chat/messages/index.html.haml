- title params[:channel]

- unless params[:commit]
  - content_for :header_bottom do
    :javascript
      var lastMessageRecordedAt = '#{@messages.last.recorded_at}';
      var lastMessageId         = #{@messages.last.id};
  
      $(document).ready(function(){
        $.scrollTo('#bottom', { axis: 'y' });
      
        setInterval('loadMessages()', 3000);
      });
    
      function loadMessages(){
        $.getJSON('#{chat_messages_path}',
          { channel:  '#{params[:channel]}',
            since:    lastMessageRecordedAt,
            last_id:  lastMessageId,
            topic:    '#{params[:topic]}'
          },
          function(data){
            if(data.length > 0){
              lastMessageRecordedAt = data[data.length - 1].recorded_at;
              lastMessageId         = data[data.length - 1].id;
            
              var scrollToMessage = isScrollBottom();
            
              for(var x = 0; x <= data.length - 1; x++){
                $('table.messages tr:last').after(data[x].html);
              }
            
              if(scrollToMessage == true)
                $.scrollTo('table.messages tr:last', { axis: 'y' });
            }
          }
        );
      }

%h1 IRC Log

- if @more_messages
  %p= link_to "Load all messages", chat_messages_path(:channel => params[:channel], :full_log => true, :topic => params[:topic])

= form_tag(chat_messages_path, :method => :get) do
  = hidden_field_tag :channel, params[:channel]
  = hidden_field_tag :topic, params[:topic] if params[:topic]

  %p
    = label_tag "Start"
    = select_datetime @start_time, :start_year => 2010, :end_year => Date.today.year, :prefix => :start, :prompt => true

  %p
    = label_tag "End"
    = select_datetime @end_time, :start_year => 2010, :end_year => Date.today.year, :prefix => :end, :prompt => true

  %p
    = link_to "Reset filters", chat_messages_path(:channel => params[:channel])
    = submit_tag 'Filter'


%table.messages
  - @messages.each do |message|
    = render :partial => "display", :locals => {:message => message}
    
#bottom